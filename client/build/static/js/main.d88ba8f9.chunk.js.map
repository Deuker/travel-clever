{"version":3,"sources":["services/auth.js","components/Signup.js","components/Navbar.js","components/Login.js","components/ProtectedRoute.js","components/RoutesList.js","components/Routes.js","components/RouteDetails.js","components/WelcomePage.js","components/Dashboard.js","components/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","axios","post","then","response","data","catch","err","login","Signup","state","message","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","setUser","history","push","Form","onSubmit","this","Group","Label","htmlFor","Control","type","onChange","id","Alert","variant","Button","Component","handleLogout","console","log","delete","Navbar","className","bg","user","Brand","to","onClick","Login","ProtectedRoute","component","path","redirectPath","rest","render","RoutesList","routes","length","map","key","_id","startpoint","endpoint","Routes","componentDidMount","getData","get","RoutesDetails","route","kilometer","co2emission","owner","error","deleteRoute","match","params","routeId","allowedToDelete","WelcomePage","Dashboard","ProfilePage","showInfo","calculate","str","sliced","parseFloat","split","routeInfo","nextProps","parseInt","App","showButton","lat","lng","zoom","mapboxgl","Map","container","style","center","addControl","MapboxDirections","accessToken","unit","profile","NavigationControl","setInterval","routeEle","document","querySelector","getRoute","innerHTML","fromToEle","getElementsByClassName","display","viewport","onViewportChange","mapboxApiAccessToken","exact","RouteDetails","React","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d88ba8f9.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst signup = (username, password) => {\n  return axios\n    .post('/api/auth/signup', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post('/api/auth/login', { username, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete('/api/auth/logout')\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };","import React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { signup } from '../services/auth';\n\nexport default class Signup extends Component {\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    signup(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n      } else {\n        this.props.setUser(data);\n        this.props.history.push('/routes');\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Signup</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor='username'>Username: </Form.Label>\n            <Form.Control\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='password'>Password: </Form.Label>\n            <Form.Control\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant='danger'>{this.state.message}</Alert>\n          )}\n          <Button type='submit'>Signup</Button>\n        </Form>\n      </>\n    );\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Navbar as Nav } from 'react-bootstrap';\nimport { logout } from '../services/auth.js';\n\nconst handleLogout = props => {\n  console.log(props);\n  logout().then(() => {\n    props.setUser(null);\n  });\n}\n\nconst Navbar = props => {\n  return (\n    <Nav className='nav justify-content-end' bg='primary'>\n      {props.user && <Nav.Brand>Welcome, {props.user.username}</Nav.Brand>}\n      <Nav.Brand>\n        <Link to='/'>Home</Link>\n      </Nav.Brand>\n      {props.user ? (\n        <>\n\n          <Nav.Brand>\n            <Link to='/' onClick={() => handleLogout(props)}>\n              Logout\n            </Link>\n            </Nav.Brand>\n            <Nav.Brand>\n            <Link to='/routes'>\n              My saved routes\n            </Link>\n          </Nav.Brand>\n        </>\n      ) : (\n          <>\n            <Nav.Brand>\n              <Link to='/signup'>Signup</Link>\n            </Nav.Brand>\n            <Nav.Brand>\n              <Link to='/login'>Login</Link>\n            </Nav.Brand>\n          </>\n        )}\n    </Nav>\n  )\n}\n\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { login } from '../services/auth';\n\nexport default class Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, password } = this.state;\n\n    login(username, password).then(data => {\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          username: '',\n          password: ''\n        });\n      } else {\n        // successfully logged in\n        // update the state for the parent component\n        this.props.setUser(data);\n        this.props.history.push('/routes');\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Login</h2>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor='username'>Username: </Form.Label>\n            <Form.Control\n              type='text'\n              name='username'\n              value={this.state.username}\n              onChange={this.handleChange}\n              id='username'\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor='password'>Password: </Form.Label>\n            <Form.Control\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              id='password'\n            />\n          </Form.Group>\n          {this.state.message && (\n            <Alert variant='danger'>{this.state.message}</Alert>\n          )}\n          <Button type='submit'>Login</Button>\n        </Form>\n      </>\n    );\n  }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({\n  component: Component,\n  user,\n  path,\n  redirectPath = '/',\n  ...rest\n}) => {\n  return (\n    <Route\n      path={path}\n      render={props => {\n        return user ? (\n          <Component {...props} {...rest} user={user} />\n        ) : (\n            <Redirect to={redirectPath} />\n          );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RoutesList = props => {\n  return (\n    <div>\n  <h1>hi</h1>\n   {props.routes.length > 0 && <h2>Routes:</h2>}\n\n      {props.routes.map(routes => {\n        return (\n          <div key={routes._id}>\n            <h3>\n              <Link to={`/routes/${routes._id}`}>{routes.startpoint} - {routes.endpoint}</Link>\n            </h3> \n            </div>\n        );\n      })} \n      \n   \n</div>\n  );\n};\n\nexport default RoutesList;","\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport RoutesList from \"./RoutesList\";\n// import Dashboard from \"./Dashboard\";\n// import ProfilePage from \"./ProfilePage\";\n\n\nexport default class Routes extends Component {\n  state = {\n    routes: [],\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/routes\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          routes: response.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"routes-container\">\n        <RoutesList routes={this.state.routes} />\n\n        {/* <Dashboard /> */}\n        {/* <ProfilePage getData={this.getData} /> */}\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nexport default class RoutesDetails extends Component {\n\n  state = {\nroute:null,\nstartpoint:'',\n    endpoint:'',\n    kilometer: '',\n    co2emission:'',\n    owner:'',\n    error:null\n  }\n\n\n  componentDidMount() {\n    const routeId = this.props.match.params.id;\n\n    return axios\n      .get(`/api/routes/${routeId}`)\n      .then(response => {\n        const route=response.data;\n       const startpoint= response.data.startpoint;\n      const  endpoint= response.data.endpoint;\n      const kilometer=response.data.kilometer;\n       const co2emission=response.data.co2emission;\n      const owner=response.data.owner;\n        \n        this.setState({ route, startpoint, endpoint, kilometer, co2emission, owner });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n\n  deleteRoute = () => {\n    const id = this.props.match.params.id;\n    axios.delete(`/api/routes/${id}`)\n      .then(() => {\n        this.props.history.push('/routes');\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n \n\n \n  render() {\n    if (this.state.error) return <div>{this.state.error}</div>\n    if (!this.state.route) return (<></>)\n\n    let allowedToDelete = false;\n    const user = this.props.user;\n    if (user) allowedToDelete = true;\n\n    return (\n      <div>\n        <h1>{this.state.route.startpoint} - {this.state.endpoint}</h1>\n        {allowedToDelete && (\n          <Button variant='danger' onClick={this.deleteRoute}>\n            Delete this route\n          </Button>\n        )}\n      </div>\n    )\n  }\n} \n","import React from 'react';\n\nconst WelcomePage = (props) => {\n  //console.log(props);\n  return(\n    <div className=\"WelcomePage\">\n      <h2>Welcome User XY</h2>\n    </div>\n  )\n}\n\nexport default WelcomePage;","import React from 'react'; \n\nconst Dashboard = () => {\n  return(\n    <div className=\"Dashboard\">\n      <h3>Here we will show the Dashboard</h3>\n      <p>Total kilometers rode</p>\n      <p>Total CO2 saved</p>\n    </div>\n  )\n}\n\nexport default Dashboard; ","import React, {\n  // useState, setState,\n  Component,\n} from \"react\";\n\nimport { Button } from \"react-bootstrap\";\n\nimport WelcomePage from \"./WelcomePage\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\n\nclass ProfilePage extends Component {\n  //state here for saving the information and sending it to the Backend\n\n  state = {\n    // startpoint: this.props.startpoint,\n    // endpoint: this.props.endpoint,\n    // kilometer: this.props.kilometer,\n    showInfo: true,\n    co2emission: \"\",\n  };\n\n  static getDerivedStateFromProps(nextProps) {\n    return {\n      startpoint: nextProps.startpoint,\n      endpoint: nextProps.endpoint,\n      kilometer: nextProps.kilometer,\n      co2emission: (parseInt(nextProps.kilometer) * 203.182) / 1000,\n    };\n  }\n\n  calculate = () => {\n    const str = this.state.kilometer;\n    const sliced = parseFloat(str.split(\"km\"));\n    console.log(\"Co2 logic\", sliced);\n  };\n\n\n  routeInfo = (event) => {\n    if (this.state.startpoint && this.state.endpoint && this.state.kilometer) {\n      this.setState({ showInfo: true });\n    } else {\n      this.setState({ showInfo: false });\n    }\n  };\n\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const data = this.props;\n    console.log(\"Final data is: \", data);\n    //axios request goes here\n\n    axios\n      .post(\"/api/routes\", {\n        startpoint: this.state.startpoint,\n        endpoint: this.state.endpoint,\n        kilometer: this.state.kilometer,\n        co2emission: this.state.co2emission,\n      })\n      .then(() => {\n        console.log(\"CO2 Data:\", this.state.co2emission);\n        // this.setState({\n        //   startpoint: \"\",\n        //   endpoint: \"\",\n        //   kilometer: \"\",\n        // });\n        // this.props.getData();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // handleChange = (event) => {\n\n  //   //event.preventDefault()\n  //   const name = event.target.name;\n  //   const value = event.target.value;\n  //   console.log(event);\n  //   console.log(event.target.name);\n  //   console.log(event.target.value);\n  //   this.setState({\n  //     [name]: value,\n  //   });\n  // };\n\n  render() {\n    console.log(\"Banana\", this.state);\n    return (\n      <div>\n        <h1>This represents the Profile Page</h1>\n        <WelcomePage />\n        <h3>Search Route:</h3>\n        <div>\n          {this.state.showInfo ? (\n            <div>\n              <div>From: {this.state.startpoint}</div>\n              <div>To: {this.state.endpoint}</div>\n              <div>Distance: {this.state.kilometer}</div>\n              <div>CO2:{this.state.co2emission}kg</div>\n              <Button onClick={this.handleSubmit} type=\"submit\">\n                Save\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        {/* <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            <Form.Label htmlFor=\"startpoint\">Startpoint: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"startpoint\"\n              value={this.state.startpoint}\n              onChange={this.handleChange}\n              id=\"startpoint\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"endpoint\">Endpoint: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"endpoint\"\n              value={this.state.endpoint}\n              onChange={this.handleChange}\n              id=\"endpoint\"\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label htmlFor=\"kilometres\">Kilometer: </Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"kilometer\"\n              value={this.state.kilometer}\n              onChange={this.handleChange}\n              id=\"kilometer\"\n            />\n          </Form.Group> */}\n        {/* <Button type=\"submit\">Save</Button> */}\n        {/* </Form> */}\n        <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default ProfilePage;\n","import React from \"react\";\n\nimport ReactMapGL from \"react-map-gl\";\nimport MapboxDirections from \"@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions\";\nimport mapboxgl from \"mapbox-gl\";\n\nimport \"./App.css\";\nimport Signup from \"./components/Signup\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\n\n\n\nimport { Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Routes from \"./components/Routes\";\nimport RouteDetails from \"./components/RouteDetails\";\nimport ProfilePage from \"./components/ProfilePage\";\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    showButton: false,\n    startpoint: \"\",\n    endpoint: \"\",\n    lat: 52.52,\n    lng: 13.405,\n    zoom: 13,\n    kilometer: \"\",\n  };\n\n  componentDidMount = () => {\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-79.4512, 43.6568],\n      zoom: 13,\n    });\n\n    map.addControl(\n      new MapboxDirections({\n        accessToken: mapboxgl.accessToken,\n        unit: \"metric\",\n        profile: \"mapbox/cycling\",\n      }),\n\n      \"top-left\"\n    );\n    map.addControl(new mapboxgl.NavigationControl());\n\n    setInterval(() => {\n      const routeEle = document.querySelector(\n        \".mapbox-directions-route-summary > h1\"\n      );\n      if (routeEle && !this.state.showButton) {\n        this.setState({\n          showButton: true,\n        });\n      } else if (!routeEle && this.state.showButton) {\n        this.setState({\n          showButton: false,\n        });\n      }\n    }, 500);\n  };\n\n  getRoute = (event) => {\n    event.preventDefault();\n    const kilometer = document.querySelector(\n      \".mapbox-directions-route-summary > h1\"\n    ).innerHTML;\n    console.log(\"distance: \", kilometer);\n\n    const fromToEle = document.getElementsByClassName(\"mapboxgl-ctrl-geocoder\");\n    const startpoint = fromToEle[0].querySelector(\"input\").value;\n    console.log(\"from: \", startpoint);\n    const endpoint = fromToEle[1].querySelector(\"input\").value;\n    console.log(\"to: \", endpoint);\n\n    this.setState({\n      startpoint: startpoint,\n      endpoint: endpoint,\n      kilometer: kilometer,\n    });\n    console.log(\n      \"Hello\",\n      this.state.startpoint,\n      this.state.endpoint,\n      this.state.kilometer\n    );\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  render() {\n    console.log(\"Heeeiiiii\", this.state.user);\n    return (\n      <div className=\"App\">\n        <Navbar user={this.state.user} setUser={this.setUser} />\n      <div className=\"pageContent\">\n   \n         <div className=\"map\" style={this.state.user? {}:{display:'none'}}>\n          {/* <div\n\n              ref={(el) => (this.mapContainer = el)}\n              className=\"mapContainer\"\n            /> */}\n            <div id='map' ></div>\n            <div >\n              <ReactMapGL\n                {...this.state.viewport}\n                onViewportChange={(viewport) => this.setState(viewport)}\n                mapboxApiAccessToken=\"pk.eyJ1IjoidmljdG9yaWF0b3JpYSIsImEiOiJja2EzbHVrMnowMzBzM2tyd2VsNnI2YnFiIn0.rZpPyrN5hdNxsnVtAWWCOQ\"\n              ></ReactMapGL>\n            </div>\n            {this.state.showButton ? (\n              <button onClick={this.getRoute}>BUTTON</button>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <div className=\"layout\">\n            <ProfilePage\n              startpoint={this.state.startpoint}\n              endpoint={this.state.endpoint}\n              kilometer={this.state.kilometer}\n            ></ProfilePage>\n            <Switch>\n              <Route\n                // this is an additional prop that is taken care of with ...rest\n                exact\n                path=\"/\"\n                user={this.state.user}\n              />\n              <ProtectedRoute\n                exact\n                path=\"/routes\"\n                user={this.state.user}\n                component={Routes}\n              />\n              ;\n\n              <ProtectedRoute\n                exact\n                path=\"/routes/:id\"\n                user={this.state.user}\n                component={RouteDetails}\n              />\n              ;\n              <Route\n                exact\n                path=\"/signup\"\n                render={(props) => <Signup setUser={this.setUser} {...props} />}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                render={(props) => <Login setUser={this.setUser} {...props} />}\n              />\n              <ProtectedRoute\n                // add protection of routes here\n                exact\n                path=\"/dashboard\"\n                component={ProfilePage}\n                render={(props) => (\n                  <ProfilePage\n                    {...props}\n                    startpoint={this.state.startpoint}\n                    endpoint={this.state.endpoint}\n                    kilometer={this.state.kilometer}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\n\naxios\n  .get(\"/api/auth/loggedin\")\n  .then((response) => {\n    console.log(\"User\", response.data);\n    ReactDOM.render(\n      <Router>\n        <App user={response.data} />\n      </Router>,\n      document.getElementById(\"root\")\n    );\n  })\n\n  .catch((err) => console.log(err));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}